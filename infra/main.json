{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.30.23.60470",
      "templateHash": "12286951848085445104"
    }
  },
  "parameters": {
    "resourceGroupName": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]",
      "metadata": {
        "description": "Name of the Resource Group"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Location for all resources"
      }
    },
    "namePrefix": {
      "type": "string",
      "defaultValue": "moneta",
      "metadata": {
        "description": "Name prefix for all resources"
      }
    },
    "cosmosDbAccountName": {
      "type": "string",
      "defaultValue": "[toLower(format('cdb{0}', uniqueString(resourceGroup().id)))]",
      "metadata": {
        "description": "Name of the Cosmos DB account"
      }
    },
    "cosmosDbDatabaseName": {
      "type": "string",
      "defaultValue": "rminsights",
      "metadata": {
        "description": "Name of the Cosmos DB database"
      }
    },
    "cosmosDbInsuranceContainerName": {
      "type": "string",
      "defaultValue": "user_fsi_ins_data",
      "metadata": {
        "description": "Name of the Cosmos DB container"
      }
    },
    "cosmosDbBankingContainerName": {
      "type": "string",
      "defaultValue": "user_fsi_bank_data",
      "metadata": {
        "description": "Name of the Cosmos DB container"
      }
    },
    "cosmosDbCRMContainerName": {
      "type": "string",
      "defaultValue": "clientdata",
      "metadata": {
        "description": "Name of the Cosmos DB container"
      }
    },
    "storageAccountName": {
      "type": "string",
      "defaultValue": "[format('sa{0}', uniqueString(resourceGroup().id))]"
    },
    "functionAppName": {
      "type": "string",
      "defaultValue": "[toLower(format('func{0}', uniqueString(resourceGroup().id)))]",
      "metadata": {
        "description": "Name of the Function App"
      }
    },
    "appInsightsLocation": {
      "type": "string",
      "defaultValue": "[parameters('location')]",
      "metadata": {
        "description": "Application Insights Location"
      }
    },
    "AZURE_OPENAI_ENDPOINT": {
      "type": "string",
      "metadata": {
        "description": "Azure OpenAI Endpoint"
      }
    },
    "AZURE_OPENAI_KEY": {
      "type": "securestring",
      "metadata": {
        "description": "Azure OpenAI Key"
      }
    },
    "AZURE_OPENAI_MODEL": {
      "type": "string",
      "metadata": {
        "description": "Azure OpenAI Model"
      }
    },
    "AZURE_OPENAI_API_VERSION": {
      "type": "string",
      "metadata": {
        "description": "Azure OpenAI API Version"
      }
    },
    "AI_SEARCH_ENDPOINT": {
      "type": "string",
      "metadata": {
        "description": "AI Search Endpoint"
      }
    },
    "AI_SEARCH_KEY": {
      "type": "securestring",
      "metadata": {
        "description": "AI Search Key"
      }
    },
    "AI_SEARCH_CIO_INDEX_NAME": {
      "type": "string",
      "metadata": {
        "description": "AI_SEARCH_CIO_INDEX_NAME"
      }
    },
    "AI_SEARCH_CIO_SEMANTIC_CONFIGURATION": {
      "type": "string",
      "metadata": {
        "description": "AI_SEARCH_CIO_SEMANTIC_CONFIGURATION"
      }
    },
    "AI_SEARCH_FUNDS_INDEX_NAME": {
      "type": "string",
      "metadata": {
        "description": "AI_SEARCH_FUNDS_INDEX_NAME"
      }
    },
    "AI_SEARCH_FUNDS_SEMANTIC_CONFIGURATION": {
      "type": "string",
      "metadata": {
        "description": "AI_SEARCH_FUNDS_SEMANTIC_CONFIGURATION"
      }
    },
    "AI_SEARCH_INS_INDEX_NAME": {
      "type": "string",
      "metadata": {
        "description": "AI_SEARCH_INS_INDEX_NAME"
      }
    },
    "AI_SEARCH_INS_SEMANTIC_CONFIGURATION": {
      "type": "string",
      "metadata": {
        "description": "AI_SEARCH_INS_SEMANTIC_CONFIGURATION"
      }
    },
    "appServicePlanName": {
      "type": "string",
      "defaultValue": "[format('{0}-plan', parameters('namePrefix'))]",
      "metadata": {
        "description": "Name of the App Service Plan for Streamlit"
      }
    },
    "webAppName": {
      "type": "string",
      "defaultValue": "[format('{0}-app', parameters('namePrefix'))]",
      "metadata": {
        "description": "Name of the Web App for Streamlit"
      }
    }
  },
  "variables": {
    "functionAppDockerImage": "DOCKER|moneta.azurecr.io/moneta-ai-backend:v1.0.1",
    "webappAppDockerImage": "DOCKER|moneta.azurecr.io/moneta-ai-frontend:v1.0.1",
    "commonTags": {
      "solution": "moneta-agentic-gbb-ai-1.0"
    }
  },
  "resources": [
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2021-06-01",
      "name": "logAnalyticsWorkspace",
      "location": "[parameters('location')]",
      "properties": {
        "retentionInDays": 30
      },
      "tags": {
        "solution": "moneta-ins-gbb-ai-1.0"
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[format('{0}-ai', parameters('functionAppName'))]",
      "location": "[parameters('appInsightsLocation')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "WorkspaceResourceId": "[resourceId('Microsoft.OperationalInsights/workspaces', 'logAnalyticsWorkspace')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', 'logAnalyticsWorkspace')]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts",
      "apiVersion": "2022-08-15",
      "name": "[parameters('cosmosDbAccountName')]",
      "location": "[parameters('location')]",
      "kind": "GlobalDocumentDB",
      "properties": {
        "databaseAccountOfferType": "Standard",
        "locations": [
          {
            "locationName": "[parameters('location')]",
            "failoverPriority": 0,
            "isZoneRedundant": false
          }
        ],
        "consistencyPolicy": {
          "defaultConsistencyLevel": "Session"
        },
        "capabilities": [],
        "ipRules": [],
        "isVirtualNetworkFilterEnabled": false,
        "enableAutomaticFailover": false,
        "enableFreeTier": false,
        "enableAnalyticalStorage": false,
        "cors": []
      },
      "tags": "[variables('commonTags')]"
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases",
      "apiVersion": "2022-05-15",
      "name": "[format('{0}/{1}', parameters('cosmosDbAccountName'), parameters('cosmosDbDatabaseName'))]",
      "properties": {
        "resource": {
          "id": "[parameters('cosmosDbDatabaseName')]"
        },
        "options": {}
      },
      "tags": "[variables('commonTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2022-05-15",
      "name": "[format('{0}/{1}/{2}', parameters('cosmosDbAccountName'), parameters('cosmosDbDatabaseName'), parameters('cosmosDbInsuranceContainerName'))]",
      "properties": {
        "resource": {
          "id": "[parameters('cosmosDbInsuranceContainerName')]",
          "partitionKey": {
            "paths": [
              "/user_id"
            ],
            "kind": "Hash"
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": []
          }
        },
        "options": {}
      },
      "tags": "[variables('commonTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosDbAccountName'), parameters('cosmosDbDatabaseName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2022-05-15",
      "name": "[format('{0}/{1}/{2}', parameters('cosmosDbAccountName'), parameters('cosmosDbDatabaseName'), parameters('cosmosDbBankingContainerName'))]",
      "properties": {
        "resource": {
          "id": "[parameters('cosmosDbBankingContainerName')]",
          "partitionKey": {
            "paths": [
              "/user_id"
            ],
            "kind": "Hash"
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": []
          }
        },
        "options": {}
      },
      "tags": "[variables('commonTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosDbAccountName'), parameters('cosmosDbDatabaseName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlDatabases/containers",
      "apiVersion": "2022-05-15",
      "name": "[format('{0}/{1}/{2}', parameters('cosmosDbAccountName'), parameters('cosmosDbDatabaseName'), parameters('cosmosDbCRMContainerName'))]",
      "properties": {
        "resource": {
          "id": "[parameters('cosmosDbCRMContainerName')]",
          "partitionKey": {
            "paths": [
              "/client_id"
            ],
            "kind": "Hash"
          },
          "indexingPolicy": {
            "indexingMode": "consistent",
            "automatic": true,
            "includedPaths": [
              {
                "path": "/*"
              }
            ],
            "excludedPaths": []
          }
        },
        "options": {}
      },
      "tags": "[variables('commonTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlDatabases', parameters('cosmosDbAccountName'), parameters('cosmosDbDatabaseName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[format('{0}-plan', parameters('functionAppName'))]",
      "location": "[parameters('location')]",
      "kind": "Linux",
      "sku": {
        "name": "B1",
        "tier": "Basic"
      },
      "properties": {
        "reserved": true
      },
      "tags": "[variables('commonTags')]"
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "apiVersion": "2022-05-01",
      "name": "[parameters('storageAccountName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Standard_LRS"
      },
      "kind": "StorageV2",
      "properties": {
        "accessTier": "Hot"
      },
      "tags": "[variables('commonTags')]"
    },
    {
      "type": "Microsoft.Storage/storageAccounts/blobServices",
      "apiVersion": "2022-05-01",
      "name": "[format('{0}/{1}', parameters('storageAccountName'), 'default')]",
      "dependsOn": [
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[parameters('functionAppName')]",
      "location": "[parameters('location')]",
      "identity": {
        "type": "SystemAssigned"
      },
      "kind": "functionapp",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', format('{0}-plan', parameters('functionAppName')))]",
        "httpsOnly": true,
        "siteConfig": {
          "pythonVersion": "3.11",
          "linuxFxVersion": "[variables('functionAppDockerImage')]",
          "alwaysOn": true,
          "appSettings": [
            {
              "name": "AzureWebJobsStorage__credential",
              "value": "managedidentity"
            },
            {
              "name": "FUNCTIONS_EXTENSION_VERSION",
              "value": "~4"
            },
            {
              "name": "AzureWebJobsFeatureFlags",
              "value": "EnableWorkerIndexing"
            },
            {
              "name": "AzureWebJobsStorage__serviceUri",
              "value": "[format('https://{0}.blob.core.windows.net', parameters('storageAccountName'))]"
            },
            {
              "name": "AzureWebJobsStorage__blobServiceUri",
              "value": "[format('https://{0}.blob.core.windows.net', parameters('storageAccountName'))]"
            },
            {
              "name": "AzureWebJobsStorage__queueServiceUri",
              "value": "[format('https://{0}.queue.core.windows.net', parameters('storageAccountName'))]"
            },
            {
              "name": "AzureWebJobsStorage__tableServiceUri",
              "value": "[format('https://{0}.table.core.windows.net', parameters('storageAccountName'))]"
            },
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "false"
            },
            {
              "name": "FUNCTIONS_WORKER_RUNTIME",
              "value": "python"
            },
            {
              "name": "FUNCTIONS_WORKER_PROCESS_COUNT",
              "value": "1"
            },
            {
              "name": "WEBSITE_MAX_DYNAMIC_APPLICATION_SCALE_OUT",
              "value": "1"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_URL",
              "value": "https://index.docker.io"
            },
            {
              "name": "COSMOSDB_ENDPOINT",
              "value": "[reference(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName')), '2022-08-15').documentEndpoint]"
            },
            {
              "name": "COSMOSDB_DATABASE_NAME",
              "value": "[parameters('cosmosDbDatabaseName')]"
            },
            {
              "name": "COSMOSDB_CONTAINER_FSI_BANK_USER_NAME",
              "value": "[parameters('cosmosDbBankingContainerName')]"
            },
            {
              "name": "COSMOSDB_CONTAINER_FSI_INS_USER_NAME",
              "value": "[parameters('cosmosDbInsuranceContainerName')]"
            },
            {
              "name": "AZURE_OPENAI_ENDPOINT",
              "value": "[parameters('AZURE_OPENAI_ENDPOINT')]"
            },
            {
              "name": "AZURE_OPENAI_KEY",
              "value": "[parameters('AZURE_OPENAI_KEY')]"
            },
            {
              "name": "AZURE_OPENAI_MODEL",
              "value": "[parameters('AZURE_OPENAI_MODEL')]"
            },
            {
              "name": "AZURE_OPENAI_API_VERSION",
              "value": "[parameters('AZURE_OPENAI_API_VERSION')]"
            },
            {
              "name": "AI_SEARCH_ENDPOINT",
              "value": "[parameters('AI_SEARCH_ENDPOINT')]"
            },
            {
              "name": "AI_SEARCH_KEY",
              "value": "[parameters('AI_SEARCH_KEY')]"
            },
            {
              "name": "AI_SEARCH_CIO_INDEX_NAME",
              "value": "[parameters('AI_SEARCH_CIO_INDEX_NAME')]"
            },
            {
              "name": "AI_SEARCH_CIO_SEMANTIC_CONFIGURATION",
              "value": "[parameters('AI_SEARCH_CIO_SEMANTIC_CONFIGURATION')]"
            },
            {
              "name": "AI_SEARCH_FUNDS_INDEX_NAME",
              "value": "[parameters('AI_SEARCH_FUNDS_INDEX_NAME')]"
            },
            {
              "name": "AI_SEARCH_FUNDS_SEMANTIC_CONFIGURATION",
              "value": "[parameters('AI_SEARCH_FUNDS_SEMANTIC_CONFIGURATION')]"
            },
            {
              "name": "AI_SEARCH_INS_INDEX_NAME",
              "value": "[parameters('AI_SEARCH_INS_INDEX_NAME')]"
            },
            {
              "name": "AI_SEARCH_INS_SEMANTIC_CONFIGURATION",
              "value": "[parameters('AI_SEARCH_INS_SEMANTIC_CONFIGURATION')]"
            }
          ]
        }
      },
      "tags": "[variables('commonTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName'))]",
        "[resourceId('Microsoft.Web/serverfarms', format('{0}-plan', parameters('functionAppName')))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
      "name": "[guid(resourceId('Microsoft.Web/sites', parameters('functionAppName')), resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), 'StorageBlobDataContributor')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ba92f5b4-2d11-453d-a403-e96b0029c9fe')]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2022-03-01', 'full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
      "name": "[guid(resourceId('Microsoft.Web/sites', parameters('functionAppName')), resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), 'StorageBlobDataOwner')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b7e6dc6d-f1e8-4753-8033-0f276bb0955b')]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2022-03-01', 'full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
      "name": "[guid(resourceId('Microsoft.Web/sites', parameters('functionAppName')), resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), 'StorageQueueDataContributor')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '974c5e8b-45b9-4653-ba55-5f855dd0fb88')]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2022-03-01', 'full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "scope": "[format('Microsoft.Storage/storageAccounts/{0}', parameters('storageAccountName'))]",
      "name": "[guid(resourceId('Microsoft.Web/sites', parameters('functionAppName')), resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName')), 'StorageAccountContributor')]",
      "properties": {
        "roleDefinitionId": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '17d1049b-9a84-46fb-8f53-869881c3d3ab')]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2022-03-01', 'full').identity.principalId]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
        "[resourceId('Microsoft.Storage/storageAccounts', parameters('storageAccountName'))]"
      ]
    },
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2020-04-01-preview",
      "scope": "[format('Microsoft.DocumentDB/databaseAccounts/{0}', parameters('cosmosDbAccountName'))]",
      "name": "[guid(subscription().id, resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName')), resourceId('Microsoft.Web/sites', parameters('functionAppName')), extensionResourceId(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName')), 'Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c'))]",
      "properties": {
        "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2022-03-01', 'full').identity.principalId]",
        "roleDefinitionId": "[extensionResourceId(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName')), 'Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "principalType": "ServicePrincipal"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName'))]",
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
      ]
    },
    {
      "type": "Microsoft.DocumentDB/databaseAccounts/sqlRoleAssignments",
      "apiVersion": "2021-04-15",
      "name": "[format('{0}/{1}', parameters('cosmosDbAccountName'), guid(resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName')), resourceId('Microsoft.Web/sites', parameters('functionAppName')), resourceId('Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions', parameters('cosmosDbAccountName'), '00000000-0000-0000-0000-000000000002')))]",
      "properties": {
        "roleDefinitionId": "[resourceId('Microsoft.DocumentDB/databaseAccounts/sqlRoleDefinitions', parameters('cosmosDbAccountName'), '00000000-0000-0000-0000-000000000002')]",
        "principalId": "[reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2022-03-01', 'full').identity.principalId]",
        "scope": "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DocumentDB/databaseAccounts', parameters('cosmosDbAccountName'))]",
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/serverfarms",
      "apiVersion": "2022-03-01",
      "name": "[parameters('appServicePlanName')]",
      "location": "[parameters('location')]",
      "kind": "Linux",
      "sku": {
        "name": "B1",
        "tier": "Basic"
      },
      "properties": {
        "reserved": true
      },
      "tags": "[variables('commonTags')]"
    },
    {
      "type": "Microsoft.Web/sites",
      "apiVersion": "2022-03-01",
      "name": "[parameters('webAppName')]",
      "location": "[parameters('location')]",
      "properties": {
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]",
        "siteConfig": {
          "linuxFxVersion": "[variables('webappAppDockerImage')]",
          "appSettings": [
            {
              "name": "WEBSITES_ENABLE_APP_SERVICE_STORAGE",
              "value": "false"
            },
            {
              "name": "FUNCTION_APP_URL",
              "value": "[format('https://{0}', reference(resourceId('Microsoft.Web/sites', parameters('functionAppName')), '2022-03-01').defaultHostName)]"
            },
            {
              "name": "DOCKER_REGISTRY_SERVER_URL",
              "value": "https://index.docker.io"
            },
            {
              "name": "DISABLE_LOGIN",
              "value": "False"
            }
          ]
        },
        "httpsOnly": true
      },
      "kind": "app,linux",
      "tags": "[variables('commonTags')]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', parameters('functionAppName'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('appServicePlanName'))]"
      ]
    }
  ]
}